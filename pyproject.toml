[project]
name = "starting-codebase"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "chromadb==1.0.15",
    "anthropic==0.58.2",
    "sentence-transformers==5.0.0",
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    "python-multipart==0.0.20",
    "python-dotenv==1.1.1",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.0.0",
    "ruff>=0.1.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  chroma_db
  | \.env
  | \.git
  | __pycache__
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long (handled by black)
]
exclude = [
    "chroma_db",
    ".env",
    ".git",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.per-file-ignores]
"backend/tests/*.py" = ["F401"]  # Allow unused imports in tests

[tool.pytest.ini_options]
# Test discovery
testpaths = ["backend/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Test", "*Tests"]
python_functions = ["test_*"]

# Output formatting
addopts = [
    "-v",  # Verbose output
    "--tb=short",  # Short traceback format
    "--strict-markers",  # Strict marker usage
    "--disable-warnings",  # Disable warnings in test output
    "--color=yes",  # Colored output
    "--durations=10",  # Show 10 slowest tests
]

# Test markers for categorization
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests with real dependencies", 
    "api: API endpoint tests",
    "slow: Tests that take a long time to run",
    "mock: Tests using mocked dependencies",
]

# Async test support
asyncio_mode = "auto"

# Minimum version requirements
minversion = "7.0"
